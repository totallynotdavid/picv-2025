[project]
name = "orchestrator"
version = "0.1.0"
description = ""
authors = [
  {name = "David Duran",email = "dadch1404@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.115.7,<0.116.0)",
    "uvicorn (>=0.34.0,<0.35.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "scipy (==1.15.1)",
    "numpy (==2.2.2)",
    "redis (>=5.2.1,<6.0.0)",
    "rq (>=2.1.0,<3.0.0)",
    "pygmt (>=0.14.2,<0.15.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "orchestrator.main:start_app"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.25.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.dev.dependencies]
aiohttp = "^3.11.12"
ruff = "^0.9.6"
rich = "^13.9.4"

[tool.pytest.ini_options]
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
# addopts = "--cov=orchestrator --cov-report html"

[tool.ruff]
target-version = "py310"
line-length = 88
indent-width = 4

extend-exclude = [
    "__pycache__",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "B",
    "I",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.poe.tasks]
dev = { shell = "uvicorn orchestrator.main:app --reload --reload-dir orchestrator" }
db = { shell = "rq worker tsdhn_queue" }
clean = { shell = "rm -rf jobs configuracion_simulacion.json informe*.pdf" }
format = { shell = "ruff format && ruff check --fix" }
